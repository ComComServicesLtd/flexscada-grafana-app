{"version":3,"sources":["../../../src/components/device/device_list.js"],"names":["_","$","DeviceListCtrl","$scope","$injector","$location","$q","backendSrv","contextSrv","alertSrv","isOrgEditor","hasRole","pageReady","filter","sort_field","devices","refresh","devicestate","getdevices","map","forEach","device","tags","tag","Object","keys","self","get","then","resp","meta","code","set","msg","reject","body","type","state","states","evt","clickTargetIsLinkOrHasLinkParents","target","closest","length","path","search","slug","url","id","templateUrl"],"mappings":"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","file":"device_list.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nclass DeviceListCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $q, backendSrv, contextSrv, alertSrv) {\n    this.isOrgEditor = contextSrv.hasRole('Editor') || contextSrv.hasRole('Admin');\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$q = $q;\n    this.$location = $location;\n    this.pageReady = false;\n    this.filter = {\n      'tag': ''\n    };\n    this.sort_field = 'name';\n    this.devices = {};\n    this.refresh();\n    this.devicestate = {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"-1\": 0,\n    };\n  }\n\n  refresh() {\n    this.getdevices();\n  }\n\n  deviceTags() {\n    var map = {};\n    _.forEach(this.devices, function(device) {\n      _.forEach(device.tags, function(tag) {\n        map[tag] = true;\n      });\n    });\n    return Object.keys(map);\n  }\n\n  setTagFilter(tag) {\n    this.filter.tag = tag;\n  }\n\n  getdevices() {\n    var self = this;\n    this.backendSrv.get('api/plugin-proxy/flexscada-app/api/vibration/v1/org/1/devices').then(function(resp) {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to get device list.\", resp.meta.msg, 'error', 10000);\n        return self.$q.reject(resp.meta.msg);\n      }\n      self.devices = resp.body;\n      self.pageReady = true;\n    });\n  }\n\n  monitorStateTxt(device, type) {\n\n    var state = 0;\n\n    if (type === \"battery\") {\n      state = 0;\n\n    } else if (type === \"link\") {\n      state = 0;\n\n    } else if (type === \"sensors\") {\n      state = 0;\n\n    }\n\n    var states = [\"online\", \"warn\", \"critical\"];\n    return states[state];\n  }\n\n  monitorStateStr(device, type) {\n\n    if (type === \"battery\") {\n      return \"Battery at 90% charge level\";\n\n    } else if (type === \"link\") {\n      return \"14% Signal\";\n\n    } else if (type === \"sensors\") {\n      return \"4 of 4 Registered sensors online\";\n    }\n\n    return \"Unknown Metric\";\n  }\n\n  gotoDashboard(device, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n    if (clickTargetIsLinkOrHasLinkParents === false) {\n      this.$location.path(\"/dashboard/db/flexscada-device-summary\").search({\n        \"var-collector\": \"All\",\n        \"var-device\": device.slug\n      });\n    }\n  }\n\n  gotoDeviceURL(device) {\n    this.$location.url('plugins/flexscada-app/page/device-details?device=' + device.id);\n  }\n}\n\nDeviceListCtrl.templateUrl = 'public/plugins/flexscada-app/components/device/partials/device_list.html';\nexport {\n  DeviceListCtrl\n};\n"]}