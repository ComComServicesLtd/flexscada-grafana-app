{"version":3,"sources":["../../../src/components/alarm/alarm_config.js"],"names":["_","angular","AlarmConfigCtrl","$scope","$injector","$rootScope","$location","$modal","$anchorScroll","$timeout","$window","$q","uiSegmentSrv","backendSrv","alertSrv","self","scope","rootscope","showCondition","pageReady","config","ds18b20","channels","deviceStatus","ignoreChanges","addNotificationSegment","newPlusButton","ruleAggregations","text","value","conditionOperators","detectionMethods","senitivitySettings","averagingSpans","binOptions","aggregationMethods","notifications","alertNotifications","get","then","res","notification","isDefault","iconClass","getNotificationIcon","type","bgColor","push","console","log","search","alarmStatus","loadAlarm","alarm","onbeforeunload","changesPending","$on","event","next","preventDefault","baseLen","absUrl","length","url","nextUrl","substring","modalScope","$new","ignore","save","savePending","appEvent","src","modalClass","unit","replace","reset","history","back","conditions","index","label","id","splice","delete","resp","meta","code","set","message","reject","path","orgid","contextSrv","user","orgId","userid","put","uid","body","changes","Promise","resolve","map","newSegment","item","name","model","find","html","templateUrl"],"mappings":"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","file":"alarm_config.js","sourcesContent":["import _ from 'lodash';\nimport angular from 'angular';\n\n\n\n\nclass AlarmConfigCtrl {\n\n   /** @ngInject */\n  constructor($scope, $injector, $rootScope, $location, $modal, $anchorScroll, $timeout, $window, $q,uiSegmentSrv, backendSrv, alertSrv) {\n    var self = this;\n    this.backendSrv = backendSrv;\n    this.$location = $location;\n    this.$timeout = $timeout;\n    this.$q = $q;\n    this.alertSrv = alertSrv;\n    this.$window = $window;\n    this.$rootScope = $rootScope;\n    \n    $window.scope = $scope;\n    $window.rootscope = $rootScope;\n    this.showCondition = [];\n\n    this.pageReady = false;\n    this.config = {};\n    this.config.ds18b20 = {};\n    this.config.channels = {};\n    this.deviceStatus = 0; // 0 = new, stage 1, 1 = new, adding information stage, 2 = exiting\n    \n    this.ignoreChanges = false;\n    \n    this.uiSegmentSrv = uiSegmentSrv;\n    \n        this.addNotificationSegment = this.uiSegmentSrv.newPlusButton();\n        \n\n        \n        this.ruleAggregations = [\n        {text: 'Average Amplitude', value: 0},\n        {text: 'Peak Amplitude', value: 1},\n        {text: 'Total Amplitude', value: 2},\n        {text: 'Any Amplitude', value: 3}\n        ];\n        \n\n    this.conditionOperators = [\n        {text: 'Is Greater Than', value: 0},\n        {text: 'Is Less Than', value: 1},\n        {text: 'Exceeds Average by', value: 2}\n        ];\n        \n        this.detectionMethods = [\n        {text: 'Rule Based', value: \"rule\"},\n        {text: 'Automatic (Bearing)', value: \"gearbox\"},\n        {text: 'Automatic (Gearbox)', value: \"bearing\"}\n        ];\n        \n        \n        this.senitivitySettings = [\n        {text: 'Low', value: \"low\"},\n        {text: 'Medium', value: \"medium\"},\n        {text: 'High', value: \"high\"}\n        ];\n        \n        \n        this.averagingSpans = [\n        {text: 'Last 7 Days', value: 604800},\n        {text: 'Last 31 Days', value: 2678400},\n        {text: 'Last 3 Months', value: 7884000},\n        {text: 'Last 6 Months', value: 15768000},\n        {text: 'Last 12 Months', value: 31536000}\n        ];\n        \n        this.binOptions = [\n        {text: '1024', value: 1024},\n        {text: '512', value: 512},\n        {text: '256', value: 256},\n        {text: '128', value: 128},\n        {text: '64', value: 64},\n        {text: '32', value: 32},\n        {text: '16', value: 16}\n        ];\n        \n        \n        \n        this.aggregationMethods = [\n        {text: 'Maximum', value: 'max'},\n        {text: 'Average', value: 'avg'}\n        ];\n        \n        \n       // this.addNotificationSegment = new MetricSegment({fake: true, html: '<i class=\"fa fa-plus \"></i>', type: 'plus-button' });\n        \n           // build notification model\n    this.notifications = []; // object of all available notification channels\n    this.alertNotifications = []; // Ui representatin only\n    \n    this.backendSrv.get('/api/alert-notifications').then(res => {\n      self.notifications = res;\n      \n      \n      \n    for (let notification of this.notifications) {\n      if (notification.isDefault) {\n        notification.iconClass = this.getNotificationIcon(notification.type);\n        notification.bgColor = \"#00678b\";\n        this.alertNotifications.push(notification);\n      }\n    }\n    \n          if(!this.config.notifications){\n          this.config.notifications = [];\n      }\n      \n           self.pageReady = true;\n    });\n        \n        \n        \n\n    \n\n    $window.console.log($location.search());\n      if (\"alarm\" in $location.search()) {\n          this.alarmStatus = 1;\n          this.loadAlarm($location.search().alarm);\n    } else {\n        this.alarmStatus = 0;\n    }\n    \n    // loadNotifications();\n\n\n\n\n    $window.onbeforeunload = function() {\n      if (self.ignoreChanges) { return; }\n      if (self.changesPending()) {\n        return \"There are unsaved changes to this dashboard\";\n      }\n    };\n    \n      \n      \n      \n    $scope.$on('$locationChangeStart', function(event, next) {\n      if ((!self.ignoreChanges) && (self.changesPending())) {\n        event.preventDefault();\n        var baseLen = $location.absUrl().length - $location.url().length;\n        var nextUrl = next.substring(baseLen);\n        var modalScope = $scope.$new();\n        modalScope.ignore = function() {\n          self.ignoreChanges = true;\n          $location.url(nextUrl);\n          return;\n        };\n\n        modalScope.save = function() {\n          self.savePending(nextUrl);\n        };\n\n        $rootScope.appEvent('show-modal', {\n          src: 'public/app/partials/unsaved-changes.html',\n          modalClass: 'confirm-modal',\n          scope: modalScope,\n        });\n      }\n    });\n  }\n  \n  \n  forceUnit(unit, value){\n value = 'test';value.replace(/[^0-9]/g, '') + unit;\n  }\n\n\n  cancel() {\n    this.reset();\n    this.ignoreChanges = true;\n    this.$window.history.back();\n  }\n\n\n  \n  addCondition(){\n      if(!this.config.conditions){\n          this.config.conditions = [];\n      }\n      \n      \n      var index = this.config.conditions.push({label: \"New Rule, Click to edit\"}) - 1;\n      this.showCondition[index] = true;\n  }\n  \n   deleteCondition(id){\n      this.config.conditions.splice(id,1);\n      this.showCondition.splice(id,1);\n  }\n  \n  removeAlarm() {\n    var self = this;\n    return this.backendSrv.delete('api/plugin-proxy/flexscada-app/api/vibration/v1/alarm/' + this.config.id).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to delete alarm.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      self.$location.path('plugins/flexscada-app/page/alarms');\n    });\n  }\n  \n  addAlarm(){\n      this.deviceStatus = 1;\n  }\n\n  saveAlarm() {\n\n    this.config.orgid = this.$rootScope.contextSrv.user.orgId;\n    this.config.userid = this.$rootScope.contextSrv.user.id;\n\n    var self = this;\n    return this.backendSrv.put\n    ('api/plugin-proxy/flexscada-app/api/vibration/v1/alarm/' + this.config.id + ((this.deviceStatus === 1) ? '/?create=true' : ''), this.config).then((resp) => {\n    self.$window.console.log(resp);\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to update alarm.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      this.deviceStatus = 2;\n    });\n  }\n  \n  \n  loadAlarm(uid) {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/flexscada-app/api/vibration/v1/alarm/' + uid).then((resp) => {\n          self.$window.console.log(resp);\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to update device.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      self.config = resp.body;\n      this.deviceStatus = 2;\n    });\n  }\n  \n  gotoDashboard() {\n   // Load the devices dashboard   \n  }\n\n\n  changesPending() {\n    var changes = false;\n\n    \n    return changes;\n  }\n  \n  \n  \n\n\n  getNotificationIcon(type) {\n    switch (type) {\n      case \"email\": return \"fa fa-envelope\";\n      case \"slack\": return \"fa fa-slack\";\n      case \"victorops\": return \"fa fa-pagelines\";\n      case \"webhook\": return \"fa fa-cubes\";\n      case \"pagerduty\": return \"fa fa-bullhorn\";\n      case \"opsgenie\": return \"fa fa-bell\";\n    }\n  }\n\n  getNotifications() {\n    return Promise.resolve(this.notifications.map(item => {\n      return this.uiSegmentSrv.newSegment(item.name);\n    }));\n  }\n\n\n  notificationAdded() {\n    var model = _.find(this.notifications, {name: this.addNotificationSegment.value});\n    if (!model) {\n      return;\n    }\n\n    this.alertNotifications.push({\n      name: model.name,\n      iconClass: this.getNotificationIcon(model.type),\n      isDefault: false\n    });\n    this.config.notifications.push({id: model.id});\n\n    // reset plus button\n    this.addNotificationSegment.value = this.uiSegmentSrv.newPlusButton().value;\n    this.addNotificationSegment.html = this.uiSegmentSrv.newPlusButton().html;\n  }\n\n  removeNotification(index) {\n    this.config.notifications.splice(index, 1);\n    this.alertNotifications.splice(index, 1);\n  }\n  \n  \n  \n  \n  \n\n}\n\nAlarmConfigCtrl.templateUrl = 'public/plugins/flexscada-app/components/alarm/partials/alarm_config.html';\n\nexport {AlarmConfigCtrl};\n"]}